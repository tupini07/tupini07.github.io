{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/shared_components/ZettBacklinks/index.tsx","webpack:///./src/components/layout_components/ZettLayout/index.tsx","webpack:///./src/components/layout_components/ZettTemplateDetails/index.tsx","webpack:///./src/templates/zett-page-template.tsx","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./src/components/shared_components/ZettLink/index.tsx","webpack:///./src/components/shared_components/ZettBacklinks/zettbacklink.module.scss","webpack:///./src/components/shared_components/ZettLink/zettlink.module.scss","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/layout_components/ZettLayout/zettlayout.module.scss","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/components/shared_components/SEO.tsx","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/layout_components/ZettTemplateDetails/zetttemplatedetails.module.scss"],"names":["MDXRenderer","require","module","ZettBacklinks","wid","relevantNodes","useStaticQuery","allMdx","nodes","filter","e","rawBody","includes","frontmatter","className","zettBacklinksStyle","title","map","key","to","fields","slug","zettLinkStyle","internal_link","split","length","ZettLayout","children","zettLayoutStyle","backHomeLink","layoutContainer","zettLeftSidebar","zettMainContainer","zettBacklinks","ZettTemplateDetails","post","data","mdx","tags","tagSlugs","tagsBlock","tag","i","wikidataLinkBlock","wikidata_entity","zettTDStyle","subtitleItem","ZettLink","href","wikiLinkBlock","wikipedia_link","externalLinkBlock","external_reference","modifiedDate","moment","date","format","components","a","props","body","ZettPageTemplate","site","siteMetadata","subtitle","postTitle","Helmet","name","content","SEO","article","description","exports","TypeError","iter","Symbol","iterator","Object","Array","from","target","linkClassName","external_link","linkTarget","startsWith","page","find","broken_link","external_wikipedia_link","external_wikidata_link","external_github_link","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","len","arr2","React","useMDXScope","scope","mdxScope","End","fullScope","keys","values","fn","o","minLen","n","prototype","toString","call","slice","constructor","test","Reflect","construct","sham","Proxy","Date","obj","value","defineProperty","enumerable","configurable","writable","image","pathname","useLocation","query","defaultTitle","defaultDescription","siteUrl","defaultImage","seo","url","property","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","push","apply","instance","Function","bind","arguments"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,gJCgCAG,EApCO,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,IAmBjBC,EAlBOC,yBAAe,cAiBGC,OAAOC,MACVC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,QAAQC,SAASR,IAAQM,EAAEG,YAAYT,MAAQA,KACzF,OACE,6BACE,wBAAIU,UAAWC,IAAmBC,OAAlC,aACA,4BACGX,EAAcY,KAAI,SAAAP,GAAC,OAClB,wBAAIQ,IAAG,QAAUR,EAAEN,KACjB,kBAAC,OAAD,CAAMe,GAAIT,EAAEU,OAAOC,KAAMP,UAAWQ,IAAcC,eAC/Cb,EAAEG,YAAYG,MADjB,kBACuCN,EAAEC,QAAQa,MAAMpB,GAAKqB,OAAS,EADrE,Y,qBCJGC,EArBI,SAAC,GAAsB,IAApBtB,EAAoB,EAApBA,IAAKuB,EAAe,EAAfA,SACzB,OACE,6BACE,yBAAKb,UAAWc,IAAgBC,cAC9B,kBAAC,OAAD,CAAMV,GAAG,iBACP,uBAAGL,UAAU,qBADf,oCAIF,yBAAKA,UAAWc,IAAgBE,iBAC9B,yBAAKhB,UAAWc,IAAgBG,iBAAhC,gBAGA,yBAAKjB,UAAWc,IAAgBI,mBAAoBL,GACpD,yBAAKb,UAAWc,IAAgBK,eAC9B,kBAAC,EAAD,CAAe7B,IAAKA,Q,0FC0Ef8B,EArFa,SAAC,GAAuC,IAC5DC,EAD4D,EAArCC,KACXC,IACZC,EAAOH,EAAKf,OAAOmB,SAEnBC,EACJ,yBAAK1B,UAAU,qBACb,wBAAIA,UAAU,0BACXwB,GACCA,EAAKrB,KAAI,SAACwB,EAAKC,GAAN,OACP,wBAAI5B,UAAU,8BAA8BI,IAAKuB,GAC/C,kBAAC,OAAD,CAAMtB,GAAIsB,EAAK3B,UAAU,oCACtBqB,EAAKtB,YAAYyB,KAAKI,UAQ/BC,EACJ,8BACGR,EAAKtB,YAAY+B,gBAClB,0BAAM9B,UAAW+B,IAAYC,cAA7B,SACS,IACL,kBAACC,EAAA,EAAD,CAAUC,KAAM,iCAAmCb,EAAKtB,YAAY+B,iBACjET,EAAKtB,YAAY+B,iBAHxB,KAQE,IAKAK,EACJ,yBAAKnC,UAAW+B,IAAYC,cACzBX,EAAKtB,YAAYqC,eAChB,8BACE,kBAACH,EAAA,EAAD,CAAUC,KAAMb,EAAKtB,YAAYqC,gBAAjC,kBADF,IAC8EP,GAG9E,IAKAQ,EACJ,yBAAKrC,UAAW+B,IAAYC,cACzBX,EAAKtB,YAAYuC,mBAChB,sCACQ,IACN,kBAACL,EAAA,EAAD,CAAUC,KAAMb,EAAKtB,YAAYuC,oBAC9BjB,EAAKtB,YAAYuC,qBAItB,IAKN,OACE,6BACE,wBAAItC,UAAW+B,IAAY7B,OACxBmB,EAAKtB,YAAYG,MAClB,wBAAIF,UAAW+B,IAAYC,cAA3B,KAA4CX,EAAKtB,YAAYT,IAA7D,MAEF,yBAAKU,UAAc+B,IAAYC,aAAjB,IAAiCD,IAAYQ,cACzD,8CAAoBC,IAAOnB,EAAKtB,YAAY0C,MAAMC,OAAO,gBAE1DP,EACAE,EACD,kBAAC,cAAD,CACEM,WAAY,CACVC,EAAG,SAAAC,GAAK,OAAI,kBAACZ,EAAA,EAAaY,MAG5B,kBAAC,cAAD,CAAa7C,UAAU,qBAAqBqB,EAAKyB,OAElDpB,IC9DQqB,UAnBU,SAAC,GAAuC,IAArCzB,EAAqC,EAArCA,KAAqC,EACnCA,EAAK0B,KAAKC,aAA9B/C,EADuD,EACvDA,MAAOgD,EADgD,EAChDA,SAEAC,EADF7B,EAAKC,IACgBxB,YAA1BG,MAER,OACE,kBAAC,EAAD,CAAYZ,IAAKgC,EAAKC,IAAIxB,YAAYT,KACpC,6BACE,kBAAC8D,EAAA,EAAD,KACE,+BAAWD,EAAX,MAA0BjD,GAC1B,0BAAMmD,KAAK,cAAcC,QAASJ,KAEpC,kBAACK,EAAA,EAAD,CAAKC,SAAS,EAAMtD,MAAOiD,EAAWM,YAAaP,IACnD,kBAAC,EAAD,CAAqB5B,KAAMA,Q,mBCjBnClC,EAAOsE,QAJP,WACE,MAAM,IAAIC,UAAU,0I,mBCGtBvE,EAAOsE,QAJP,SAA0BE,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,kCCD1F,0DAkEe3B,IA9DE,SAAC,GAQZ,IAPJC,EAOI,EAPJA,KACArB,EAMI,EANJA,SACAqD,EAKI,EALJA,OAMM5C,EAAO9B,yBAAe,cAgBxB2E,EAAgB3D,IAAc4D,cAC9BC,EAAaH,GAAU,SAC3B,GAAIhC,EAAKoC,WAAW,QAAS,CAC3B,IAAMC,EAAOjD,EAAK7B,OAAOC,MAAM8E,MAAK,SAAA5E,GAAC,OAAIA,EAAEG,YAAYT,MAAQ4C,KAC/DmC,EAAa,QAGTE,GAIA1D,EADEA,EACSA,EAASyD,WAAW,MAC3BC,EAAKxE,YAAYG,MACjBW,GAAY0D,EAAKxE,YAAYG,MACnBqE,EAAKxE,YAAYG,MAEjCgC,EAAOqC,EAAKjE,OAAOC,KACnB4D,EAAgB3D,IAAcC,gBAG9BI,EAAW,gBAAgBqB,EAAnB,IACRA,EAAO,IACPiC,EAAmB3D,IAAcC,cAApB,IAAqCD,IAAciE,aAQpE,OAJIvC,EAAKpC,SAAS,eAAgBqE,EAAgB3D,IAAckE,wBACvDxC,EAAKpC,SAAS,cAAeqE,EAAgB3D,IAAcmE,uBAC3DzC,EAAKpC,SAAS,cAAaqE,EAAgB3D,IAAcoE,sBAGhE,kBAAC,OAAD,CAAMvE,GAAI6B,EAAMlC,UAAWmE,EAAeD,OAAQG,GAC/CxD,K,uBC5DPzB,EAAOsE,QAAU,CAAC,MAAQ,sC,qBCA1BtE,EAAOsE,QAAU,CAAC,wBAA0B,kDAAkD,uBAAyB,iDAAiD,qBAAuB,+CAA+C,cAAgB,wCAAwC,YAAc,sCAAsC,cAAgB,0C,qBCD1W,IAAImB,EAAmB,EAAQ,QAM/BzF,EAAOsE,QAJP,SAA4BoB,GAC1B,GAAId,MAAMe,QAAQD,GAAM,OAAOD,EAAiBC,K,qBCFlD1F,EAAOsE,QAAU,CAAC,aAAe,yCAAyC,gBAAkB,4CAA4C,gBAAkB,4CAA4C,kBAAoB,8CAA8C,cAAgB,4C,qBCDxR,IAAIsB,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhC/F,EAAOsE,QAJP,SAA4BoB,GAC1B,OAAOE,EAAkBF,IAAQG,EAAgBH,IAAQI,EAA2BJ,IAAQK,M,mBCC9F/F,EAAOsE,QAVP,SAA2BoB,EAAKM,IACnB,MAAPA,GAAeA,EAAMN,EAAInE,UAAQyE,EAAMN,EAAInE,QAE/C,IAAK,IAAIiB,EAAI,EAAGyD,EAAO,IAAIrB,MAAMoB,GAAMxD,EAAIwD,EAAKxD,IAC9CyD,EAAKzD,GAAKkD,EAAIlD,GAGhB,OAAOyD,I,woBCPT,IAAMC,EAAQnG,EAAd,QACQoC,EAAQpC,EAAQ,QAAhBoC,IACAgE,EAAgBpG,EAAQ,QAAxBoG,YAERnG,UAAiB,SAAqB,GAIlC,IAHFoG,EAGC,EAHDA,MACA3E,EAEC,EAFDA,SACGgC,EACF,0BACK4C,EAAWF,EADhB,GAIKG,EAAMJ,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMK,EAAS,GAGbL,MAHa,EAIb/D,OAJF,GAQMqE,EAAO7B,YAAb,GACM8B,EAASD,EAAA,KAAS,SAAAxF,GAAG,OAAIuF,EAAJ,MAG3B,OAFQ,mCAAR,KAEOG,2BAAP,OACC,CAACjF,EAlBJ,IAoBA,OAAOyE,uBAAP,M,qBChCF,IAAIT,EAAmB,EAAQ,QAW/BzF,EAAOsE,QATP,SAAqCqC,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOlB,EAAiBkB,EAAGC,GACtD,IAAIC,EAAIlC,OAAOmC,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYjD,MAC7C,QAAN4C,GAAqB,QAANA,EAAoBjC,MAAMC,KAAK8B,GACxC,cAANE,GAAqB,2CAA2CM,KAAKN,GAAWpB,EAAiBkB,EAAGC,QAAxG,K,mBCKF5G,EAAOsE,QAbP,WACE,GAAuB,oBAAZ8C,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKV,UAAUC,SAASC,KAAKI,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOhH,GACP,OAAO,K,mBCMXR,EAAOsE,QAfP,SAAyBmD,EAAKzG,EAAK0G,GAYjC,OAXI1G,KAAOyG,EACT9C,OAAOgD,eAAeF,EAAKzG,EAAK,CAC9B0G,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIzG,GAAO0G,EAGND,I,kCCZT,6DAyCetD,IApCH,SAAC,GAUP,IATJrD,EASI,EATJA,MACAuD,EAQI,EARJA,YACA0D,EAOI,EAPJA,MACA3D,EAMI,EANJA,QAOQ4D,EAAaC,wBAAbD,SAEAnE,EAAkBzD,yBAAe8H,GAAoBtE,KAArDC,aACAsE,EAA4DtE,EAA5DsE,aAAcC,EAA8CvE,EAA9CuE,mBAAoBC,EAA0BxE,EAA1BwE,QAASC,EAAiBzE,EAAjByE,aAE7CC,EAAM,CACVzH,MAAOA,GAASqH,EAChB9D,YAAaA,GAAe+D,EAC5BL,MAAO,GAAGM,GAAUN,GAASO,GAC7BE,IAAK,GAAGH,EAAUL,GAGpB,OACE,kBAAC,IAAD,CAAQlH,MAAOyH,EAAIzH,OACjB,0BAAMmD,KAAK,cAAcC,QAASqE,EAAIlE,cACrCkE,EAAIR,OAAS,0BAAM9D,KAAK,QAAQC,QAASqE,EAAIR,QAC7CQ,EAAIC,KAAO,0BAAMC,SAAS,SAASvE,QAASqE,EAAIC,OAC/CpE,EAAiB,KAAS,0BAAMqE,SAAS,UAAUvE,QAAQ,YAC5DqE,EAAIzH,OAAS,0BAAM2H,SAAS,WAAWvE,QAASqE,EAAIzH,QACpDyH,EAAIlE,aAAe,0BAAMoE,SAAS,iBAAiBvE,QAASqE,EAAIlE,cAChEkE,EAAIR,OAAS,0BAAMU,SAAS,WAAWvE,QAASqE,EAAIR,UAO3D,IAAMG,EAAQ,a,qBC3Cd,IAAIQ,EAAiB,EAAQ,QAEzBC,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAbIJ,IACF3I,EAAOsE,QAAUsE,EAAaxB,QAAQC,UAEtCrH,EAAOsE,QAAUsE,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIvF,EAAI,CAAC,MACTA,EAAEwF,KAAKC,MAAMzF,EAAGsF,GAChB,IACII,EAAW,IADGC,SAASC,KAAKH,MAAMJ,EAAQrF,IAG9C,OADIuF,GAAOL,EAAeQ,EAAUH,EAAMjC,WACnCoC,GAIJN,EAAWK,MAAM,KAAMI,WAGhCrJ,EAAOsE,QAAUsE,G,qBCpBjB5I,EAAOsE,QAAU,CAAC,MAAQ,2CAA2C,aAAe,kDAAkD,aAAe","file":"component---src-templates-zett-page-template-tsx-01ff1be0c99392ad850e.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\nimport zettLinkStyle from '../ZettLink/zettlink.module.scss';\nimport zettBacklinksStyle from './zettbacklink.module.scss';\n\nconst ZettBacklinks = ({ wid }: { wid: string }) => {\n  const data = useStaticQuery(graphql`\n    query ZettBacklinkItems {\n      allMdx(filter: { frontmatter: { layout: { eq: \"zettelkasten\" }, draft: { ne: true } } }) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            wid\n          }\n          rawBody\n        }\n      }\n    }\n  `);\n\n  const nodes: Array<any> = data.allMdx.nodes;\n  const relevantNodes = nodes.filter(e => e.rawBody.includes(wid) && e.frontmatter.wid !== wid);\n  return (\n    <div>\n      <h1 className={zettBacklinksStyle.title}>Backlinks</h1>\n      <ul>\n        {relevantNodes.map(e => (\n          <li key={`item-${e.wid}`}>\n            <Link to={e.fields.slug} className={zettLinkStyle.internal_link}>\n              {e.frontmatter.title} (Occurrences: {e.rawBody.split(wid).length - 1})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ZettBacklinks;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport '../../../assets/scss/init.scss';\nimport ZettBacklinks from '../../shared_components/ZettBacklinks';\nimport zettLayoutStyle from './zettlayout.module.scss';\n\nconst ZettLayout = ({ wid, children }) => {\n  return (\n    <div>\n      <div className={zettLayoutStyle.backHomeLink}>\n        <Link to='/zettelkasten'>\n          <i className='icon-arraow-left' /> Back to Zettelkasten Main Page\n        </Link>\n      </div>\n      <div className={zettLayoutStyle.layoutContainer}>\n        <div className={zettLayoutStyle.zettLeftSidebar}>\n          Left sidebar\n        </div>\n        <div className={zettLayoutStyle.zettMainContainer}>{children}</div>\n        <div className={zettLayoutStyle.zettBacklinks}>\n          <ZettBacklinks wid={wid} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ZettLayout;\n","import { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport moment from 'moment';\nimport React from 'react';\nimport ZettLink from '../../shared_components/ZettLink';\nimport zettTDStyle from './zetttemplatedetails.module.scss';\nimport { ZettPagesQuery } from '../../../graphql';\n\nconst ZettTemplateDetails = ({ data }: { data: ZettPagesQuery }) => {\n  const post = data.mdx;\n  const tags = post.fields.tagSlugs;\n\n  const tagsBlock = (\n    <div className='post-single__tags'>\n      <ul className='post-single__tags-list'>\n        {tags &&\n          tags.map((tag, i) => (\n            <li className='post-single__tags-list-item' key={tag}>\n              <Link to={tag} className='post-single__tags-list-item-link'>\n                {post.frontmatter.tags[i]}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n\n  const wikidataLinkBlock = (\n    <span>\n      {post.frontmatter.wikidata_entity ? (\n      <span className={zettTDStyle.subtitleItem}>(\n          QID:{' '}\n          <ZettLink href={'https://www.wikidata.org/wiki/' + post.frontmatter.wikidata_entity}>\n            {post.frontmatter.wikidata_entity}\n          </ZettLink>\n        )\n        </span>\n      ) : (\n        ''\n      )}\n    </span>\n  );\n\n  const wikiLinkBlock = (\n    <div className={zettTDStyle.subtitleItem}>\n      {post.frontmatter.wikipedia_link ? (\n        <span>\n          <ZettLink href={post.frontmatter.wikipedia_link}>Wikipedia Link</ZettLink> {wikidataLinkBlock}\n        </span>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n\n  const externalLinkBlock = (\n    <div className={zettTDStyle.subtitleItem}>\n      {post.frontmatter.external_reference ? (\n        <span>\n          Home:{' '}\n          <ZettLink href={post.frontmatter.external_reference}>\n            {post.frontmatter.external_reference}\n          </ZettLink>\n        </span>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <h1 className={zettTDStyle.title}>\n        {post.frontmatter.title}\n        <em className={zettTDStyle.subtitleItem}> ({post.frontmatter.wid})</em>\n      </h1>\n      <div className={`${zettTDStyle.subtitleItem} ${zettTDStyle.modifiedDate}`}>\n        <em>Last modified: {moment(post.frontmatter.date).format('D MMM YYYY')}</em>\n      </div>\n      {wikiLinkBlock}\n      {externalLinkBlock}\n      <MDXProvider\n        components={{\n          a: props => <ZettLink {...props} />\n        }}\n      >\n        <MDXRenderer className='post-single__body'>{post.body}</MDXRenderer>\n      </MDXProvider>\n      {tagsBlock}\n    </div>\n  );\n};\n\nexport default ZettTemplateDetails;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport SEO from '../components/shared_components/SEO';\nimport { ZettPagesQuery } from '../graphql';\nimport ZettLayout from '../components/layout_components/ZettLayout';\nimport { Helmet } from 'react-helmet';\nimport ZettTemplateDetails from '../components/layout_components/ZettTemplateDetails';\n\nconst ZettPageTemplate = ({ data }: { data: ZettPagesQuery }) => {\n  const { title, subtitle } = data.site.siteMetadata;\n  const post = data.mdx;\n  const { title: postTitle } = post.frontmatter;\n\n  return (\n    <ZettLayout wid={data.mdx.frontmatter.wid}>\n      <div>\n        <Helmet>\n          <title>{`${postTitle} - ${title}`}</title>\n          <meta name='description' content={subtitle} />\n        </Helmet>\n        <SEO article={true} title={postTitle} description={subtitle} />\n        <ZettTemplateDetails data={data} />\n      </div>\n    </ZettLayout>\n  );\n};\n\nexport default ZettPageTemplate;\n\nexport const pageQuery = graphql`\n  query ZettPages($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n        disqusShortname\n        url\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n        wid\n        wikidata_entity\n        wikipedia_link\n        external_reference\n      }\n    }\n  }\n`;\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\nimport zettLinkStyle from './zettlink.module.scss';\n\nconst ZettLink = ({\n  href,\n  children,\n  target\n}: {\n  href: string;\n  children?: string;\n  target?: string;\n}) => {\n  const data = useStaticQuery(graphql`\n    query ZettLinkItems {\n      allMdx(filter: { frontmatter: { layout: { eq: \"zettelkasten\" }, draft: { ne: true } } }) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            wid\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  let linkClassName = zettLinkStyle.external_link;\n  let linkTarget = target || '_blank';\n  if (href.startsWith('WID:')) {\n    const page = data.allMdx.nodes.find(e => e.frontmatter.wid === href);\n    linkTarget = '_self';\n\n    // if the page exists\n    if (page) {\n      // If link title starts with '!!' then ignore it and use the one from\n      // the actual page\n      if (children)\n        children = children.startsWith('!!')\n          ? page.frontmatter.title\n          : children || page.frontmatter.title;\n      else children = page.frontmatter.title;\n\n      href = page.fields.slug;\n      linkClassName = zettLinkStyle.internal_link;\n    } else {\n      // else it is a broken link and should be marked as such\n      children = `BROKEN-LINK (${href})`;\n      href = '#';\n      linkClassName = `${zettLinkStyle.internal_link} ${zettLinkStyle.broken_link}`;\n    }\n  }\n\n  if (href.includes('.wikipedia.')) linkClassName = zettLinkStyle.external_wikipedia_link;\n  else if (href.includes('.wikidata.')) linkClassName = zettLinkStyle.external_wikidata_link;\n  else if (href.includes('.github.')) linkClassName = zettLinkStyle.external_github_link;\n\n  return (\n    <Link to={href} className={linkClassName} target={linkTarget}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ZettLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"zettbacklink-module--title--21Z5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"external_wikipedia_link\":\"zettlink-module--external_wikipedia_link--1yc2q\",\"external_wikidata_link\":\"zettlink-module--external_wikidata_link--2uWjb\",\"external_github_link\":\"zettlink-module--external_github_link--GqlLx\",\"external_link\":\"zettlink-module--external_link--10ACe\",\"broken_link\":\"zettlink-module--broken_link--1-vTv\",\"internal_link\":\"zettlink-module--internal_link--39_OW\"};","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backHomeLink\":\"zettlayout-module--backHomeLink--1kDY7\",\"layoutContainer\":\"zettlayout-module--layoutContainer--2NIHH\",\"zettLeftSidebar\":\"zettlayout-module--zettLeftSidebar--1RJue\",\"zettMainContainer\":\"zettlayout-module--zettMainContainer--1EDt0\",\"zettBacklinks\":\"zettlayout-module--zettBacklinks--1S0Y8\"};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { useLocation } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { SeoQuery } from '../../graphql';\nconst SEO = ({\n  title,\n  description,\n  image,\n  article\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  article: boolean;\n}) => {\n  const { pathname } = useLocation();\n\n  const { siteMetadata } = (useStaticQuery(query) as SeoQuery).site;\n  const { defaultTitle, defaultDescription, siteUrl, defaultImage } = siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`\n  };\n\n  return (\n    <Helmet title={seo.title}>\n      <meta name='description' content={seo.description} />\n      {seo.image && <meta name='image' content={seo.image} />}\n      {seo.url && <meta property='og:url' content={seo.url} />}\n      {(article ? true : null) && <meta property='og:type' content='article' />}\n      {seo.title && <meta property='og:title' content={seo.title} />}\n      {seo.description && <meta property='og:description' content={seo.description} />}\n      {seo.image && <meta property='og:image' content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"zetttemplatedetails-module--title--24ndJ\",\"subtitleItem\":\"zetttemplatedetails-module--subtitleItem--3vyQf\",\"modifiedDate\":\"zetttemplatedetails-module--modifiedDate--2vgWy\"};"],"sourceRoot":""}