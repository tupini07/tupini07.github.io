{"componentChunkName":"component---src-templates-page-template-tsx","path":"/about","result":{"data":{"site":{"siteMetadata":{"title":"Personal Notebook","subtitle":"Personal notebook"}},"mdx":{"id":"e12f7163-e3f4-531d-8f03-81cbbdd50e78","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"About this site\",\n  \"layout\": \"page\",\n  \"path\": \"/about\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This site is mainly for myself, so I apologize if you encounter any cryptic or incomprehensible thing (it was probably\\nwritten with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"me\"), \" in mind). There may be some notes that are good enough for human consumption, but for the most part\\nthink of this as my notebook.\"), mdx(\"p\", null, \"The site is composed mainly of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/zettelkasten\"\n  }, \"Zettlekasten\"), \", which are my personal notes about \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"stuff\"), \", as well as\\nhigher level \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"notes\")), \" (although they are more like longer notes than anything else), which use the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"zettlekasten\"), \"\\nto build up knowledge.\"), mdx(\"p\", null, \"If you want something like this platform for yourself then feel free to clone the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/tupini07/tupini07.github.io/tree/dev\"\n  }, \"GitHub\\nrepository\"), \". If you want to make changes or fix a typo then PRs\\nare more than welcome.\"), mdx(\"h2\", null, \"About the platform\"), mdx(\"p\", null, \"My idea for this site was to create a platform where I can write interconnected, and easily navigable notes, in an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"easy\\nto consume\"), \" way. I've tried multiple applications that do this, but until now nothing has \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"scrached every itch\"), \", so I\\ndecided to build my own platform.\"), mdx(\"p\", null, \"Luckily there's no need to build everything from scratch since there are lots of great open source elements that can be\\nused. Most of the functionality for the site is built on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://gatsbyjs.org/\"\n  }, \"Gatsby\"), \" which is in charge of building\\nthe site and a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"graphql\"), \" dataset which is used to create every page you see here.\"), mdx(\"p\", null, \"All the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"zettlekasten\"), \" are actually notes imported from my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/org-roam/org-roam\"\n  }, \"org-roam\"), \" (which in\\nturn is based on emacs' \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://orgmode.org/\"\n  }, \"org mode\"), \") notes using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/tupini07/tupini07.github.io/blob/dev/scripts/import-org-roam\"\n  }, \"this custom\\nscript\"), \". This ensures that\\nI can easily work on my notes locally with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"org-roam\"), \" and have a nice version of them published on the web.\"), mdx(\"p\", null, \"The inspiration for the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"zettlekasten\"), \" note linking system was taken from wiki systems, mainly\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.dokuwiki.org/dokuwiki\"\n  }, \"DokuWiki\"), \", where every entity is identified by a key. This allows me to reference\\nitems without needing to provide the path (or actually worrying about it at all), since Gatsby will end up finding the\\ncorrect path during the build process, and replacing the references with it.\"), mdx(\"p\", null, \"I have many changes and extensions I want to make to the platform (as you can see in the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/tupini07/tupini07.github.io/blob/dev/README.md#todo\"\n  }, \"TODO\"), \" section of the README). Most of this I do\\nin my free time so it is quite possible that the number of items in the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"wishlist\"), \" will grow faster than I'm actually\\nable to implement them.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/about"},"frontmatter":{"date":null,"title":"About this site","description":null}}},"pageContext":{"slug":"/about"}},"staticQueryHashes":["3939833422","4045636118","876543683"]}