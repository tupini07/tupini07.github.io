{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/zettelkasten/WID:20200710073759-docker"},"frontmatter":{"title":"Docker","wid":"WID:20200710073759-docker"},"rawBody":"---\ntitle: Docker\ndate: \"2020-10-15T11:09:55.561716\"\nwid: WID:20200710073759-docker\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://www.docker.com/\nwikidata_entity: Q15206305\nwikipedia_link: https://en.wikipedia.org/wiki/Docker (software)\npath: /zettelkasten/WID:20200710073759-docker\n---\n\nDocker is the main containerization technology\n\n# Tools\n\n-   [!!Portainer](WID:20200710074024-portainer) - a tool to manage\n    docker installations via web interface. Supports both local and\n    remote installations.\n-   [!!Traefik](WID:20200710080219-traefik) - a *super reverse proxy*\n    that routes requests to linked services (be them exposed by Docker\n    or not).\n-   [!!Watchtower](WID:20200710114254-watchtower) - A process for\n    automating Docker container base image updates\n\n# Doing stuff\n\n## Connecting to a host port from inside a Docker container\n\nSuppose the case in which we have a DB server running on the host and\nwant to connect to it from inside a docker container. An easy solution\nfor this would be to use `--network=host` when launching the container,\nbut this is not always possible (or if you\\'re using Docker on Windows,\nat least not today: \\[2020-10-15 Thu\\]).\n\n**Note:** In the future (pending the resolution of [this\nissue](https://github.com/docker/for-linux/issues/264)) we can use\n`host.docker.internal` to access the *bridge* between container and\nhost. Although this functionality seems to be working fine in MacOS and\nWindows.\n\nIn linux we can use the command `ip a` to find the IP address of the\n`docker0` interface. We can then use this IP from within the container\nto reference the *bridge*. See\n[this](https://stackoverflow.com/a/31328031/2234619) stackoverflow\nanswer for more details.\n"},{"fields":{"slug":"/zettelkasten/WID:20200710074024-portainer"},"frontmatter":{"title":"Portainer","wid":"WID:20200710074024-portainer"},"rawBody":"---\ntitle: Portainer\ndate: \"2020-08-03T09:11:03.836681\"\nwid: WID:20200710074024-portainer\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://www.portainer.io/\nwikidata_entity: Q64825554\npath: /zettelkasten/WID:20200710074024-portainer\n---\n\n*Portainer* can be used to manage docker containers in a host (either\nlocal or remote). Mainly used for monitoring and quick diagnostics.\n\nIt can also be used to manage all other aspects of Dockers\\'s\ninfrastructure (images, stacks, networks, volumes, etc). It can also be\nused to set up *application templates*.\n\nIt provides the following useful functionality:\n\n-   a web frontend\n-   Shell access to container\n-   container usage statistics\n-   application templates\n\nIt also allows to manage *stacks* directly, which means that docker\ncompose files can be managed and edited from the interface.\n\n# Simple usage via *docker run*\n\n``` {.bash}\ndocker volume create portainer_data\ndocker run -d -p 8000:8000 -p 9000:9000\n  --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock\n  -v portainer_data:/data portainer/portainer\n```\n\n# Running the edge agent on *edge* systems\n\nThis is for remote systems that we want to control.\n\nJust fill out the information in the FE and it will give the command to\nexecute in the *edge* server to start the agent.\n\nNote however that the *portainer* server needs to be reachable by the\nedge instance since this edge instance will periodically poll the server\nfor instructions.\n"},{"fields":{"slug":"/zettelkasten/WID:20200710080219-traefik"},"frontmatter":{"title":"Traefik","wid":"WID:20200710080219-traefik"},"rawBody":"---\ntitle: Traefik\ndate: \"2020-08-04T17:21:07.349438\"\nwid: WID:20200710080219-traefik\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://docs.containo.us/\nwikidata_entity: Q96332968\npath: /zettelkasten/WID:20200710080219-traefik\n---\n\nIts kind of a \\\"super reverse proxy\\\" like nginx, but specific for\ndocker services.\n\n**From web page:**\n\nTraefikEE (Traefik Enterprise Edition) runs on the edge of your platform\nto route the traffic to your applications.\n\nBy splitting responsibilities between two planes, TraefikEE follows the\nprinciple of \\\"Separation of Concerns.\\\" To ensure that sensitive\ninformation only runs on a closed and safe environment, the control\nplane is not exposed to the outside. As a result, any malicious action\nfrom external traffic will stay stuck in the data plane and your\nplatform will stay safe. Moreover, TraefikEE only relies on encrypted\ncommunications between nodes, to add an extra layer of security.\n"},{"fields":{"slug":"/zettelkasten/WID:20200710114254-watchtower"},"frontmatter":{"title":"Watchtower","wid":"WID:20200710114254-watchtower"},"rawBody":"---\ntitle: Watchtower\ndate: \"2020-08-12T10:24:44.848480\"\nwid: WID:20200710114254-watchtower\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://containrrr.dev/watchtower/\nwikidata_entity: null\npath: /zettelkasten/WID:20200710114254-watchtower\n---\n\nWatchtower is an application that will monitor your running Docker\ncontainers and watch for changes to the images that those containers\nwere originally started from. If watchtower detects that an image has\nchanged, it will automatically restart the container using the new\nimage.\n\nWith watchtower you can update the running version of your containerized\napp simply by pushing a new image to the Docker Hub or your own image\nregistry. Watchtower will pull down your new image, gracefully shut down\nyour existing container and restart it with the same options that were\nused when it was deployed initially.\n\nJust execute the container with the docker socket mounted.\n\n``` {.bash}\ndocker run -d \\\n  --name watchtower \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  containrrr/watchtower\n```\n\nIt also supports pulling from private or authenticated image registries.\n\nIt can be set to watch only one, or a set of containers. Also it can be\nused as part as a **docker-compose** file to only update the containers\ndefined in that stack.\n\nIt can send **notifications** of the updates via multiple channels (see\n[doc](https://containrrr.dev/watchtower/notifications/)).\n\nIt can be set to manage remote docker instances if the docker daemon\nlistens to TCP.\n"},{"fields":{"slug":"/zettelkasten/WID:20200728215938-nuget"},"frontmatter":{"title":"Nuget","wid":"WID:20200728215938-nuget"},"rawBody":"---\ntitle: Nuget\ndate: \"2020-08-03T09:13:41.711347\"\nwid: WID:20200728215938-nuget\nlayout: zettelkasten\ndraft: false\ntags:\n  - Package_Manager\nexternal_reference: https://www.nuget.org/\nwikidata_entity: Q975870\nwikipedia_link: https://en.wikipedia.org/wiki/NuGet\npath: /zettelkasten/WID:20200728215938-nuget\n---\n\nNuget is the de-facto package manager for .NET applications.\n\n# Obtaining an API key\n\nAn API key can be easily obtained from NuGet to make it possible to\naccess the platform programmatically. This can be done in the top right\nmenu, under `API Keys`, or directly at [this\nURL](https://www.nuget.org/account/apikeys). API keys will expire by\ndefault after a duration of *\\~1 year* (at least at the moment of this\nwriting).\n"},{"fields":{"slug":"/zettelkasten/WID:20200803144648-cloudfront"},"frontmatter":{"title":"Amazon CloudFront","wid":"WID:20200803144648-cloudfront"},"rawBody":"---\ntitle: Amazon CloudFront\ndate: \"2020-09-01T08:24:46.989989\"\nwid: WID:20200803144648-cloudfront\nlayout: zettelkasten\ndraft: false\ntags:\n  - tag1\n  - tag2\nexternal_reference: https://aws.amazon.com/cloudfront/\nwikidata_entity: Q1628791\nwikipedia_link: https://en.wikipedia.org/wiki/Amazon CloudFront\npath: /zettelkasten/WID:20200803144648-cloudfront\n---\n\nCloudfront is a [!!AWS](WID:20200803144816-aws) service which provides a\nCDN functionality for data hosted on AWS.\n\nIt is also commonly used as a *front* for web assets hosted on S3.\n\n# Using a custom domain with CloudFront\n\nSee\n[here](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html)\nfor the complete documentation.\n\nBasically, we just need to add the name as an *Alternate Domain Name*\nfor the distribution, and create a rule in the domain\\'s DNS so that\nrequests are *routed* to the CloudFront domain provided by AWS.\n\nFrom CloudFront\\'s documentation:\n\n> Use the method provided by your DNS service provider to add a CNAME\n> record for your domain. This new CNAME record will redirect DNS\n> queries from your domain (for example, www.example.com) to the\n> CloudFront domain name for your distribution (for example,\n> d111111abcdef8.cloudfront.net). For more information, see the\n> documentation provided by your DNS service provider.\n\nHowever, it is very possible that we also want to use a free certificate\ngiven by [!!AWS-ACM](WID:20200803145314-aws_acm) for this. If this is\nthe case then we first need to request the certificate so that the\ndomain can be used, before adding the domain can be added as a valid\nalternate domain.\n"},{"fields":{"slug":"/zettelkasten/WID:20200803144816-aws"},"frontmatter":{"title":"Amazon Web Services","wid":"WID:20200803144816-aws"},"rawBody":"---\ntitle: Amazon Web Services\ndate: \"2020-08-04T12:31:58.618817\"\nwid: WID:20200803144816-aws\nlayout: zettelkasten\ndraft: false\ntags:\n  - tag1\n  - tag2\nexternal_reference: https://aws.amazon.com/\nwikidata_entity: Q456157\nwikipedia_link: https://en.wikipedia.org/wiki/Amazon Web Services\npath: /zettelkasten/WID:20200803144816-aws\n---\n\nsubsidiary of Amazon that provides on-demand cloud computing platforms\non a metered pay-as-you-go basis\n\n# Provided Services\n\n-   [!!Amazon CloudFront](WID:20200803144648-cloudfront)\n-   [!!Amazon Certificate Manager](WID:20200803145314-aws_acm)\n"},{"fields":{"slug":"/zettelkasten/WID:20200803145314-aws_acm"},"frontmatter":{"title":"Amazon Certificate Manager","wid":"WID:20200803145314-aws_acm"},"rawBody":"---\ntitle: Amazon Certificate Manager\ndate: \"2020-08-04T12:32:20.798978\"\nwid: WID:20200803145314-aws_acm\nlayout: zettelkasten\ndraft: false\ntags:\n  - tag1\n  - tag2\nexternal_reference: https://aws.amazon.com/certificate-manager/\nwikidata_entity: null\npath: /zettelkasten/WID:20200803145314-aws_acm\n---\n\n[!!AWS](WID:20200803144816-aws) service that allows to manage\ncertificates. It is both able to store external certificates (bought\nfrom an external certificate provider), as well as provide certificates\ndirectly.\n\nIt works very well with [!!CloudFront](WID:20200803144648-cloudfront),\nand it allows to provision free certificates.\n\n# Getting free certificates with ACM\n\nNote that the certificates will say that they\\'re from ACM, but they at\nleast allow *https* communication.\n\nTo get a free certificate, go over to the [request\ncertificate](https://console.aws.amazon.com/acm/home?region=us-east-1#/wizard/)\npage. After filling out some simple information in the wizard (domain,\nvalidation method), the selected domain for which the certificate is to\nbe issued will be validated according to the selected validation method.\n\nIf you have access to the registar email of the domain then that\\'s the\neasiest option. Else, the DNS validation option is also quite simple,\nand basically consists of adding a CNAME entry to the DNS record so that\nACM can confirm that we\\'re actually the owners of the domain. Said\nCNAME entry is provided by ACM directly in the wizard.\n"},{"fields":{"slug":"/zettelkasten/WID:20200812160510-google_analytics"},"frontmatter":{"title":"Google Analytics","wid":"WID:20200812160510-google_analytics"},"rawBody":"---\ntitle: Google Analytics\ndate: \"2020-08-12T10:34:45.504238\"\nwid: WID:20200812160510-google_analytics\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://analytics.google.com/\nwikidata_entity: Q220577\nwikipedia_link: https://en.wikipedia.org/wiki/Google Analytics\npath: /zettelkasten/WID:20200812160510-google_analytics\n---\n\nGoogle Analytics if a very used system to track actions in a website. It\nis provided as a free service by Google, and at it\\'s most simple it is\nvery easy to integrate into an existing website.\n\nBasically, to make a `GA` work on a website, you only need to add the\ntracking code provided when you create a *property*.\n\n# The `gtag` function\n\nThe `gtag` function is the main way of interacting with GA. The basic\nshape is `gtag('<type>', '<key>', <parameters>*)`.\n\nThe most basic functionality is just to specify the *config* (which is\nlike registering a property with the library):\n\n``` {.javascript}\ngtag('config', 'UA-XXXXXXX-X');\n```\n\nMore information about this can be found [in the\ndocumentation](https://developers.google.com/analytics/devguides/collection/gtagjs/pages).\n\n# Triggering events\n\nWe can *register* arbitrary events with GA also through the `gtag`\nfunction, in the following way:\n\n``` {.javascript}\ngtag('event', eventName, {\n    eventCategory: eventCategory,\n    eventLabel: eventLabel,\n    eventAction: eventAction,\n    eventValue: eventValue\n});\n```\n\nThese events will then appear in the GA dashboard and be there for us if\nwe want to analyze them.\n"},{"fields":{"slug":"/zettelkasten/WID:20200812182231-bounce_rate"},"frontmatter":{"title":"Bounce Rate","wid":"WID:20200812182231-bounce_rate"},"rawBody":"---\ntitle: Bounce Rate\ndate: \"2020-08-12T12:26:06.739011\"\nwid: WID:20200812182231-bounce_rate\nlayout: zettelkasten\ndraft: false\ntags:\n  - terminology\nwikidata_entity: Q895134\nwikipedia_link: https://en.wikipedia.org/wiki/Bounce rate\npath: /zettelkasten/WID:20200812182231-bounce_rate\n---\n\nThe bounce rate is the percentage of *sessions* that viewed only one\nsite and then exited instead of continuing on to another page of the\nwebsite.\n\nIt is a measure of the effectiveness of a website in encouraging\nvisitors to continue with their visit.\n"},{"fields":{"slug":"/zettelkasten/WID:20200825154152-dokku"},"frontmatter":{"title":"Dokku","wid":"WID:20200825154152-dokku"},"rawBody":"---\ntitle: Dokku\ndate: \"2020-08-25T09:48:39.051889\"\nwid: WID:20200825154152-dokku\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://github.com/dokku/dokku\npath: /zettelkasten/WID:20200825154152-dokku\n---\n\nDokku is an extensible, open source Platform as a Service that runs on a\nsingle server of your choice. Kind of like a\n[!!Heroku](WID:20200825154835-heroku) clone that can be deployed\nanywhere (it actually uses heroku build packs to build and deploy\nstuff).\n"},{"fields":{"slug":"/zettelkasten/WID:20200825154835-heroku"},"frontmatter":{"title":"Heroku","wid":"WID:20200825154835-heroku"},"rawBody":"---\ntitle: Heroku\ndate: \"2020-08-25T09:52:36.685802\"\nwid: WID:20200825154835-heroku\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://www.heroku.com/\nwikidata_entity: Q2350702\nwikipedia_link: https://en.wikipedia.org/wiki/Heroku\npath: /zettelkasten/WID:20200825154835-heroku\n---\n\nHeroku is a cloud platform as a service (PaaS) supporting several\nprogramming languages. One of the first cloud platforms, Heroku has been\nin development since June 2007, when it supported only the Ruby\nprogramming language, but now supports Java, Node.js, Scala, Clojure,\nPython, PHP, and Go. For this reason, Heroku is said to be a polyglot\nplatform as it has features for a developer to build, run and scale\napplications in a similar manner across most languages.\n"},{"fields":{"slug":"/zettelkasten/WID:20201014135215-nexus_10_manta"},"frontmatter":{"title":"Nexus 10 (manta)","wid":"WID:20201014135215-nexus_10_manta"},"rawBody":"---\ntitle: Nexus 10 (manta)\ndate: \"2020-10-14T14:39:46.444690\"\nwid: WID:20201014135215-nexus_10_manta\nlayout: zettelkasten\ndraft: false\ntags:\n  - devices\nwikidata_entity: Q3875739\nwikipedia_link: https://en.wikipedia.org/wiki/Nexus 10\npath: /zettelkasten/WID:20201014135215-nexus_10_manta\n---\n\nThe nexus 10 was pretty much my first tablet and it still works pretty\nwell given that I manually update the ROM every couple of months.\n\n# Installing a custom ROM\n\n## Getting the ROM\n\nHead over to the [XDA Nexus\n10](https://forum.xda-developers.com/nexus-10) page and search for a\nROM. A good thread is [this\none](https://forum.xda-developers.com/nexus-10/development/rom-lineage-14-1-20170216-unofficial-t3557735),\nwhich is a port of lineage for the manta. Download the *.zip* file for\nthe rom and place it in the root of the system storage for the device.\n\n## Preparing recovery\n\nIn my experience, the best recovery image is TWRP. Head over to the\n[official TWRP page](https://twrp.me/samsung/samsungnexus10.html) for\nmanta, download the latest image and flash it to the recovery partition.\n\nTo enter bootloader mode: press power + vol-up + vol-down\n\n### Flashing TWRP\n\nIf it is necessary to flash TWRP then it is possible to do so with\n`fastboot` by first entering into bootloader. Follow the instructions of\nthe TWRP site.\n\n## Getting GAPS\n\nGo to the [OpenGapps](https://opengapps.org/) page and download whatever\nflavor is necessary. **Note** that manta has an **ARM** processor, so be\nsure to select this one, and also select the appropriate android version\nfor the selected rom (if the android version is not correct they you\nwon\\'t be able to install gapps).\n\nNote that the *pico* option is quite good, sometimes if a big option is\nchosen then an error while flashing may arise informing that there is\nnot enough space in the system partition (this space can be increased).\n\n## [TODO]{.todo .TODO} Magisk {#magisk}\n\nMagisk provides an interface to run android as root.\n<https://topjohnwu.github.io/Magisk/install.html>\n\nTODO: do and define\n\n## Installing stuff\n\nBoot into recovery, wipe *system, dalvik, and cache*, then head over to\n*install* and first install the ROM, followed by the *opengapps*, and\nthen *magisk*. Reboot and everything should work.\n\nRemember to check the install instructions of the rom provider, since\nthey may vary from case to case.\n"},{"fields":{"slug":"/zettelkasten/WID:20201209213747-google_cloud_platform"},"frontmatter":{"title":"Google Cloud Platform","wid":"WID:20201209213747-google_cloud_platform"},"rawBody":"---\ntitle: Google Cloud Platform\ndate: \"2021-01-23T07:20:33.278503\"\nwid: WID:20201209213747-google_cloud_platform\nlayout: zettelkasten\ndraft: false\nexternal_reference: https://console.cloud.google.com/\nwikidata_entity: Q17054505\nwikipedia_link: https://en.wikipedia.org/wiki/Google Cloud Platform\npath: /zettelkasten/WID:20201209213747-google_cloud_platform\n---\n\n# Services\n"},{"fields":{"slug":"/zettelkasten/WID:index"},"frontmatter":{"title":"Zettlkasten Index","wid":"WID:index"},"rawBody":"---\ntitle: Zettlkasten Index\ndate: \"2020-12-09T15:37:54.370174\"\nwid: WID:index\nlayout: zettelkasten\ndraft: false\npath: /zettelkasten/WID:index\n---\n\n# Tech\n\n## Package repositories\n\n[!!Nuget](WID:20200728215938-nuget)\n\n## Cloud Services\n\n-   [!!Amazon Web Services](WID:20200803144816-aws)\n-   [!!Google Cloud Platform](WID:20201209213747-google_cloud_platform)\n\n## Tracking\n\n[!!Google Analytics](WID:20200812160510-google_analytics)\n\n## Platforms\n\n[!!Dokku](WID:20200825154152-dokku)\n\n## Containerization\n\n[!!Docker](WID:20200710073759-docker)\n\n## Devices\n\n[!!Nexus 10 (manta)](WID:20201014135215-nexus_10_manta)\n\n# Marketing\n\n## Terms\n\n-   [!!Bounce Rate](WID:20200812182231-bounce_rate)\n"}]}}}