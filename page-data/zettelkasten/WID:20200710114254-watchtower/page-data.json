{"componentChunkName":"component---src-templates-zett-page-template-tsx","path":"/zettelkasten/WID:20200710114254-watchtower","result":{"data":{"site":{"siteMetadata":{"title":"Personal Notebook","subtitle":"Personal notebook","copyright":"Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Un-ported License","author":{"name":"Andrea Tupini","twitter":""},"disqusShortname":"","url":"https://tupini07.github.io"}},"mdx":{"id":"29ffe1ff-8fc3-5b87-a837-79ae65ffd76f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Watchtower\",\n  \"date\": \"2020-08-12T10:24:44.848480\",\n  \"wid\": \"WID:20200710114254-watchtower\",\n  \"layout\": \"zettelkasten\",\n  \"draft\": false,\n  \"external_reference\": \"https://containrrr.dev/watchtower/\",\n  \"wikidata_entity\": null,\n  \"path\": \"/zettelkasten/WID:20200710114254-watchtower\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Watchtower is an application that will monitor your running Docker\\ncontainers and watch for changes to the images that those containers\\nwere originally started from. If watchtower detects that an image has\\nchanged, it will automatically restart the container using the new\\nimage.\"), mdx(\"p\", null, \"With watchtower you can update the running version of your containerized\\napp simply by pushing a new image to the Docker Hub or your own image\\nregistry. Watchtower will pull down your new image, gracefully shut down\\nyour existing container and restart it with the same options that were\\nused when it was deployed initially.\"), mdx(\"p\", null, \"Just execute the container with the docker socket mounted.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"docker run -d \\\\\\n  --name watchtower \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  containrrr/watchtower\"))), mdx(\"p\", null, \"It also supports pulling from private or authenticated image registries.\"), mdx(\"p\", null, \"It can be set to watch only one, or a set of containers. Also it can be\\nused as part as a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"docker-compose\"), \" file to only update the containers\\ndefined in that stack.\"), mdx(\"p\", null, \"It can send \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"notifications\"), \" of the updates via multiple channels (see\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://containrrr.dev/watchtower/notifications/\"\n  }, \"doc\"), \").\"), mdx(\"p\", null, \"It can be set to manage remote docker instances if the docker daemon\\nlistens to TCP.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"tagSlugs":null,"slug":"/zettelkasten/WID:20200710114254-watchtower"},"frontmatter":{"title":"Watchtower","tags":null,"date":"2020-08-12T10:24:44.848480","wid":"WID:20200710114254-watchtower","wikidata_entity":null,"wikipedia_link":null,"external_reference":"https://containrrr.dev/watchtower/"}}},"pageContext":{"slug":"/zettelkasten/WID:20200710114254-watchtower"}},"staticQueryHashes":["1512840792","4037150233","876543683"]}