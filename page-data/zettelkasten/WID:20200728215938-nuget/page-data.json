{"componentChunkName":"component---src-templates-zett-page-template-tsx","path":"/zettelkasten/WID:20200728215938-nuget","result":{"data":{"site":{"siteMetadata":{"title":"Personal Notebook","subtitle":"Personal notebook","copyright":"Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Un-ported License","author":{"name":"Andrea Tupini","twitter":""},"disqusShortname":"","url":"https://tupini07.github.io"}},"mdx":{"id":"2df97d67-0872-5eef-a6d1-3ed7aba40361","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Nuget\",\n  \"date\": \"2020-08-03T09:13:41.711347\",\n  \"wid\": \"WID:20200728215938-nuget\",\n  \"layout\": \"zettelkasten\",\n  \"draft\": false,\n  \"tags\": [\"Package_Manager\"],\n  \"external_reference\": \"https://www.nuget.org/\",\n  \"wikidata_entity\": \"Q975870\",\n  \"wikipedia_link\": \"https://en.wikipedia.org/wiki/NuGet\",\n  \"path\": \"/zettelkasten/WID:20200728215938-nuget\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Nuget is the de-facto package manager for .NET applications.\"), mdx(\"h1\", null, \"Obtaining an API key\"), mdx(\"p\", null, \"An API key can be easily obtained from NuGet to make it possible to\\naccess the platform programmatically. This can be done in the top right\\nmenu, under \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"API Keys\"), \", or directly at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nuget.org/account/apikeys\"\n  }, \"this\\nURL\"), \". API keys will expire by\\ndefault after a duration of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"~\", \"1 year\"), \" (at least at the moment of this\\nwriting).\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"tagSlugs":["/tags/package-manager/"],"slug":"/zettelkasten/WID:20200728215938-nuget"},"frontmatter":{"title":"Nuget","tags":["Package_Manager"],"date":"2020-08-03T09:13:41.711347","wid":"WID:20200728215938-nuget","wikidata_entity":"Q975870","wikipedia_link":"https://en.wikipedia.org/wiki/NuGet","external_reference":"https://www.nuget.org/"}}},"pageContext":{"slug":"/zettelkasten/WID:20200728215938-nuget"}},"staticQueryHashes":["1512840792","4037150233","876543683"]}