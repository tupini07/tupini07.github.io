{"componentChunkName":"component---src-templates-zett-page-template-tsx","path":"/zettelkasten/WID:20200803144648-cloudfront","result":{"data":{"site":{"siteMetadata":{"title":"Personal Notebook","subtitle":"Personal notebook","copyright":"Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Un-ported License","author":{"name":"Andrea Tupini","twitter":""},"disqusShortname":"","url":"https://tupini07.github.io"}},"mdx":{"id":"fe289876-2dd1-5388-bf39-4bec13589ff7","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Amazon CloudFront\",\n  \"date\": \"2020-09-01T08:24:46.989989\",\n  \"wid\": \"WID:20200803144648-cloudfront\",\n  \"layout\": \"zettelkasten\",\n  \"draft\": false,\n  \"tags\": [\"tag1\", \"tag2\"],\n  \"external_reference\": \"https://aws.amazon.com/cloudfront/\",\n  \"wikidata_entity\": \"Q1628791\",\n  \"wikipedia_link\": \"https://en.wikipedia.org/wiki/Amazon CloudFront\",\n  \"path\": \"/zettelkasten/WID:20200803144648-cloudfront\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Cloudfront is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"WID:20200803144816-aws\"\n  }, \"!!AWS\"), \" service which provides a\\nCDN functionality for data hosted on AWS.\"), mdx(\"p\", null, \"It is also commonly used as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"front\"), \" for web assets hosted on S3.\"), mdx(\"h1\", null, \"Using a custom domain with CloudFront\"), mdx(\"p\", null, \"See\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html\"\n  }, \"here\"), \"\\nfor the complete documentation.\"), mdx(\"p\", null, \"Basically, we just need to add the name as an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Alternate Domain Name\"), \"\\nfor the distribution, and create a rule in the domain\\\\'s DNS so that\\nrequests are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"routed\"), \" to the CloudFront domain provided by AWS.\"), mdx(\"p\", null, \"From CloudFront\\\\'s documentation:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Use the method provided by your DNS service provider to add a CNAME\\nrecord for your domain. This new CNAME record will redirect DNS\\nqueries from your domain (for example, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.example.com\"\n  }, \"www.example.com\"), \") to the\\nCloudFront domain name for your distribution (for example,\\nd111111abcdef8.cloudfront.net). For more information, see the\\ndocumentation provided by your DNS service provider.\")), mdx(\"p\", null, \"However, it is very possible that we also want to use a free certificate\\ngiven by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"WID:20200803145314-aws_acm\"\n  }, \"!!AWS-ACM\"), \" for this. If this is\\nthe case then we first need to request the certificate so that the\\ndomain can be used, before adding the domain can be added as a valid\\nalternate domain.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"tagSlugs":["/tags/tag-1/","/tags/tag-2/"],"slug":"/zettelkasten/WID:20200803144648-cloudfront"},"frontmatter":{"title":"Amazon CloudFront","tags":["tag1","tag2"],"date":"2020-09-01T08:24:46.989989","wid":"WID:20200803144648-cloudfront","wikidata_entity":"Q1628791","wikipedia_link":"https://en.wikipedia.org/wiki/Amazon CloudFront","external_reference":"https://aws.amazon.com/cloudfront/"}}},"pageContext":{"slug":"/zettelkasten/WID:20200803144648-cloudfront"}},"staticQueryHashes":["1512840792","4037150233","876543683"]}