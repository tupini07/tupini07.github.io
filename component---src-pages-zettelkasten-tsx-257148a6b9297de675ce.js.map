{"version":3,"sources":["webpack:///./src/components/shared_components/ZettLink/index.tsx","webpack:///./src/components/shared_components/ZettLink/zettlink.module.scss","webpack:///./src/pages/zettelkasten.tsx"],"names":["ZettLink","href","children","target","data","useStaticQuery","linkClassName","zettLinkStyle","external_link","linkTarget","startsWith","page","allMdx","nodes","find","e","frontmatter","wid","title","fields","slug","internal_link","broken_link","includes","external_wikipedia_link","external_wikidata_link","external_github_link","to","className","module","exports","zettelkastenRoute","location","site","siteMetadata","zettPages","map","zettP","key","moment","date","format"],"mappings":"4FAAA,0DAkEeA,IA9DE,SAAC,GAQZ,IAPJC,EAOI,EAPJA,KACAC,EAMI,EANJA,SACAC,EAKI,EALJA,OAMMC,EAAOC,yBAAe,cAgBxBC,EAAgBC,IAAcC,cAC9BC,EAAaN,GAAU,SAC3B,GAAIF,EAAKS,WAAW,QAAS,CAC3B,IAAMC,EAAOP,EAAKQ,OAAOC,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,YAAYC,MAAQhB,KAC/DQ,EAAa,QAGTE,GAIAT,EADEA,EACSA,EAASQ,WAAW,MAC3BC,EAAKK,YAAYE,MACjBhB,GAAYS,EAAKK,YAAYE,MACnBP,EAAKK,YAAYE,MAEjCjB,EAAOU,EAAKQ,OAAOC,KACnBd,EAAgBC,IAAcc,gBAG9BnB,EAAW,gBAAgBD,EAAnB,IACRA,EAAO,IACPK,EAAmBC,IAAcc,cAApB,IAAqCd,IAAce,aAQpE,OAJIrB,EAAKsB,SAAS,eAAgBjB,EAAgBC,IAAciB,wBACvDvB,EAAKsB,SAAS,cAAejB,EAAgBC,IAAckB,uBAC3DxB,EAAKsB,SAAS,cAAajB,EAAgBC,IAAcmB,sBAGhE,kBAAC,OAAD,CAAMC,GAAI1B,EAAM2B,UAAWtB,EAAeH,OAAQM,GAC/CP,K,qBC5DP2B,EAAOC,QAAU,CAAC,wBAA0B,kDAAkD,uBAAyB,iDAAiD,qBAAuB,+CAA+C,cAAgB,wCAAwC,YAAc,sCAAsC,cAAgB,0C,kCCD1W,iHAkDeC,UA1CW,SAAC,GAAuB,IAArB3B,EAAqB,EAArBA,KAAM4B,EAAe,EAAfA,SACzBd,EAAUd,EAAK6B,KAAKC,aAApBhB,MACFiB,EAAwB/B,EAAKQ,OAAOC,MAC1C,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAQK,MAAK,kBAAoBA,IACjC,kBAAC,IAAD,CAASc,SAAUA,IACnB,yBAAKJ,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eAAd,gBACA,6CACA,4BACE,4BACE,kBAAC,IAAD,CAAU3B,KAAK,eAEjB,4BACE,kBAAC,OAAD,CAAM0B,GAAG,8BAAT,kBAGJ,4CACA,yBAAKC,UAAU,cACb,wBAAIA,UAAU,oBACXO,EAAUC,KAAI,SAAAC,GAAK,OAClB,wBAAIC,IAAKD,EAAMrB,YAAYC,IAAKW,UAAU,yBACxC,kBAAC,IAAD,CAAU3B,KAAMoC,EAAMrB,YAAYC,MADpC,mBAC4D,IACzDsB,IAAOF,EAAMrB,YAAYwB,MAAMC,OAAO,cAFzC","file":"component---src-pages-zettelkasten-tsx-257148a6b9297de675ce.js","sourcesContent":["import { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\nimport zettLinkStyle from './zettlink.module.scss';\n\nconst ZettLink = ({\n  href,\n  children,\n  target\n}: {\n  href: string;\n  children?: string;\n  target?: string;\n}) => {\n  const data = useStaticQuery(graphql`\n    query ZettLinkItems {\n      allMdx(filter: { frontmatter: { layout: { eq: \"zettelkasten\" }, draft: { ne: true } } }) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            wid\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  let linkClassName = zettLinkStyle.external_link;\n  let linkTarget = target || '_blank';\n  if (href.startsWith('WID:')) {\n    const page = data.allMdx.nodes.find(e => e.frontmatter.wid === href);\n    linkTarget = '_self';\n\n    // if the page exists\n    if (page) {\n      // If link title starts with '!!' then ignore it and use the one from\n      // the actual page\n      if (children)\n        children = children.startsWith('!!')\n          ? page.frontmatter.title\n          : children || page.frontmatter.title;\n      else children = page.frontmatter.title;\n\n      href = page.fields.slug;\n      linkClassName = zettLinkStyle.internal_link;\n    } else {\n      // else it is a broken link and should be marked as such\n      children = `BROKEN-LINK (${href})`;\n      href = '#';\n      linkClassName = `${zettLinkStyle.internal_link} ${zettLinkStyle.broken_link}`;\n    }\n  }\n\n  if (href.includes('.wikipedia.')) linkClassName = zettLinkStyle.external_wikipedia_link;\n  else if (href.includes('.wikidata.')) linkClassName = zettLinkStyle.external_wikidata_link;\n  else if (href.includes('.github.')) linkClassName = zettLinkStyle.external_github_link;\n\n  return (\n    <Link to={href} className={linkClassName} target={linkTarget}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ZettLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"external_wikipedia_link\":\"zettlink-module--external_wikipedia_link--1yc2q\",\"external_wikidata_link\":\"zettlink-module--external_wikidata_link--2uWjb\",\"external_github_link\":\"zettlink-module--external_github_link--GqlLx\",\"external_link\":\"zettlink-module--external_link--10ACe\",\"broken_link\":\"zettlink-module--broken_link--1-vTv\",\"internal_link\":\"zettlink-module--internal_link--39_OW\"};","import { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout_components/Layout';\nimport Sidebar from '../components/shared_components/Sidebar';\nimport ZettLink from '../components/shared_components/ZettLink';\nimport moment from 'moment';\nimport { Helmet } from 'react-helmet';\n\nconst zettelkastenRoute = ({ data, location }) => {\n  const { title } = data.site.siteMetadata;\n  const zettPages: Array<any> = data.allMdx.nodes;\n  return (\n    <Layout>\n      <div>\n        <Helmet title={`Zettelkasten - ${title}`} />\n        <Sidebar location={location} />\n        <div className='content'>\n          <div className='content__inner'>\n            <div className='page'>\n              <div className='page__body'>\n                <h1 className='page__title'>Zettelkasten</h1>\n                <h3>Special pages</h3>\n                <ul>\n                  <li>\n                    <ZettLink href='WID:index' />\n                  </li>\n                  <li>\n                    <Link to='/zettelkasten-broken-links'>Broken Links</Link>\n                  </li>\n                </ul>\n                <h3>Recent pages</h3>\n                <div className='categories'>\n                  <ul className='categories__list'>\n                    {zettPages.map(zettP => (\n                      <li key={zettP.frontmatter.wid} className='categories__list-item'>\n                        <ZettLink href={zettP.frontmatter.wid} /> (Last modified:{' '}\n                        {moment(zettP.frontmatter.date).format('D MMM YYYY')})\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default zettelkastenRoute;\n\nexport const pageQuery = graphql`\n  query Zettelkasten {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      limit: 10\n      filter: { frontmatter: { layout: { eq: \"zettelkasten\" }, draft: { ne: true } } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          wid\n          title\n          date\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}