{"version":3,"sources":["webpack:///./src/components/layout_components/Layout/index.tsx","webpack:///./src/components/layout_components/Post/index.tsx","webpack:///./src/components/layout_components/CategoryTemplateDetails/index.tsx","webpack:///./src/templates/category-template.tsx"],"names":["Layout","children","className","defaultTitle","Post","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","dateTime","moment","format","key","to","CategoryTemplateDetails","pageContext","items","allMdx","edges","forEach","post","push","CategoryTemplate","site","siteMetadata","Helmet"],"mappings":"8FAAA,iDAaeA,IATA,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAChB,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAQC,aAAa,sBACpBF,K,yDCRP,oEAmCeG,IA9BF,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAAW,EACsBA,EAAKC,KAAKC,YAAjDC,EADiB,EACjBA,MAAOC,EADU,EACVA,KAAMC,EADI,EACJA,SAAUC,EADN,EACMA,YADN,EAEMN,EAAKC,KAAKM,OAAjCC,EAFiB,EAEjBA,KAAMC,EAFW,EAEXA,aAEd,OACE,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,cACb,0BAAMA,UAAU,kBAAkBa,SAAUC,IAAOP,GAAMQ,OAAO,iBAC7DD,IAAOP,GAAMQ,OAAO,cAEvB,0BAAMf,UAAU,uBAChB,0BAAMA,UAAU,sBAAsBgB,IAAKJ,GACzC,kBAAC,OAAD,CAAMK,GAAIL,EAAcZ,UAAU,4BAC/BQ,KAIP,wBAAIR,UAAU,eACZ,kBAAC,OAAD,CAAMA,UAAU,mBAAmBiB,GAAI,IAAMN,GAC1CL,IAGL,uBAAGN,UAAU,qBAAqBS,GAClC,kBAAC,OAAD,CAAMT,UAAU,iBAAiBiB,GAAI,IAAMN,GAA3C,W,sGCLSO,EApBiB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAahB,EAAW,EAAXA,KACxCiB,EAAQ,GACNZ,EAAaW,EAAbX,SAMR,OALcL,EAAKkB,OAAOC,MACpBC,SAAQ,SAAAC,GACZJ,EAAMK,KAAK,kBAACvB,EAAA,EAAD,CAAMC,KAAMqB,EAAMR,IAAKQ,EAAKpB,KAAKM,OAAOC,WAInD,yBAAKX,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAeQ,GAC7B,yBAAKR,UAAU,cAAcoB,OCIxBM,UAdU,SAAC,GAA0B,IAAxBvB,EAAwB,EAAxBA,KAAMgB,EAAkB,EAAlBA,YACxBb,EAAUH,EAAKwB,KAAKC,aAApBtB,MACAE,EAAaW,EAAbX,SAER,OACE,kBAACV,EAAA,EAAD,KACE,6BACE,kBAAC+B,EAAA,EAAD,CAAQvB,MAAUE,EAAL,MAAmBF,IAChC,kBAAC,EAAD,CAAyBH,KAAMA,EAAMgB,YAAaA","file":"component---src-templates-category-template-tsx-d11ca12f21c6d758be02.js","sourcesContent":["import React from 'react';\nimport '../../../assets/scss/init.scss';\nimport { Helmet } from 'react-helmet';\n\nconst Layout = ({ children }) => {\n  return (\n    <div className='layout'>\n      <Helmet defaultTitle='Personal Notebook' />\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import { Link } from 'gatsby';\nimport moment from 'moment';\nimport React from 'react';\nimport './style.scss';\n\nconst Post = ({ data }) => {\n  const { title, date, category, description } = data.node.frontmatter;\n  const { slug, categorySlug } = data.node.fields;\n\n  return (\n    <div className='post'>\n      <div className='post__meta'>\n        <time className='post__meta-time' dateTime={moment(date).format('MMMM D, YYYY')}>\n          {moment(date).format('MMMM YYYY')}\n        </time>\n        <span className='post__meta-divider' />\n        <span className='post__meta-category' key={categorySlug}>\n          <Link to={categorySlug} className='post__meta-category-link'>\n            {category}\n          </Link>\n        </span>\n      </div>\n      <h2 className='post__title'>\n        <Link className='post__title-link' to={\"/\" + slug}>\n          {title}\n        </Link>\n      </h2>\n      <p className='post__description'>{description}</p>\n      <Link className='post__readmore' to={\"/\" + slug}>\n        Read\n      </Link>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post';\n\nconst CategoryTemplateDetails = ({ pageContext, data }) => {\n  const items = [];\n  const { category } = pageContext;\n  const posts = data.allMdx.edges;\n  posts.forEach(post => {\n    items.push(<Post data={post} key={post.node.fields.slug} />);\n  });\n\n  return (\n    <div className='content'>\n      <div className='content__inner'>\n        <div className='page'>\n          <h1 className='page__title'>{category}</h1>\n          <div className='page__body'>{items}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryTemplateDetails;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout_components/Layout';\nimport { Helmet } from 'react-helmet';\nimport CategoryTemplateDetails from '../components/layout_components/CategoryTemplateDetails';\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const { title } = data.site.siteMetadata;\n  const { category } = pageContext;\n\n  return (\n    <Layout>\n      <div>\n        <Helmet title={`${category} - ${title}`} />\n        <CategoryTemplateDetails data={data} pageContext={pageContext} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CategoryTemplate;\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMdx(\n      limit: 1000\n      filter: {\n        frontmatter: { category: { eq: $category }, layout: { eq: \"post\" }, draft: { ne: true } }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}