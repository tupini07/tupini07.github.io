{"version":3,"sources":["webpack:///./src/components/layout_components/Layout/index.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./src/components/shared_components/ZettLink/index.tsx","webpack:///./src/components/shared_components/ZettLink/zettlink.module.scss","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/components/shared_components/SEO.tsx","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/layout_components/PostTemplateDetails/index.tsx","webpack:///./src/templates/post-template.tsx"],"names":["Layout","children","className","defaultTitle","MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","ZettLink","href","target","data","useStaticQuery","linkClassName","zettLinkStyle","external_link","linkTarget","startsWith","page","allMdx","nodes","find","e","frontmatter","wid","title","fields","slug","internal_link","broken_link","includes","external_wikipedia_link","external_wikidata_link","external_github_link","to","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","len","length","i","arr2","React","mdx","useMDXScope","scope","props","mdxScope","End","fullScope","keys","values","key","fn","o","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","obj","value","defineProperty","enumerable","configurable","writable","SEO","description","image","article","pathname","useLocation","siteMetadata","query","site","defaultDescription","siteUrl","defaultImage","seo","url","content","property","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","PostTemplateDetails","subtitle","author","post","tags","tagSlugs","homeBlock","tagsBlock","map","tag","moment","date","format","components","body","twitter","rel","PostTemplate","postTitle","postDescription","Helmet"],"mappings":"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","file":"component---src-templates-post-template-tsx-8af1b67026650a71f34d.js","sourcesContent":["import React from 'react';\nimport '../../../assets/scss/init.scss';\nimport { Helmet } from 'react-helmet';\n\nconst Layout = ({ children }) => {\n  return (\n    <div className='layout'>\n      <Helmet defaultTitle='Personal Notebook' />\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\nimport zettLinkStyle from './zettlink.module.scss';\n\nconst ZettLink = ({\n  href,\n  children,\n  target\n}: {\n  href: string;\n  children?: string;\n  target?: string;\n}) => {\n  const data = useStaticQuery(graphql`\n    query ZettLinkItems {\n      allMdx(filter: { frontmatter: { layout: { eq: \"zettelkasten\" }, draft: { ne: true } } }) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            wid\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  let linkClassName = zettLinkStyle.external_link;\n  let linkTarget = target || '_blank';\n  if (href.startsWith('WID:')) {\n    const page = data.allMdx.nodes.find(e => e.frontmatter.wid === href);\n    linkTarget = '_self';\n\n    // if the page exists\n    if (page) {\n      // If link title starts with '!!' then ignore it and use the one from\n      // the actual page\n      if (children)\n        children = children.startsWith('!!')\n          ? page.frontmatter.title\n          : children || page.frontmatter.title;\n      else children = page.frontmatter.title;\n\n      href = page.fields.slug;\n      linkClassName = zettLinkStyle.internal_link;\n    } else {\n      // else it is a broken link and should be marked as such\n      children = `BROKEN-LINK (${href})`;\n      href = '#';\n      linkClassName = `${zettLinkStyle.internal_link} ${zettLinkStyle.broken_link}`;\n    }\n  }\n\n  if (href.includes('.wikipedia.')) linkClassName = zettLinkStyle.external_wikipedia_link;\n  else if (href.includes('.wikidata.')) linkClassName = zettLinkStyle.external_wikidata_link;\n  else if (href.includes('.github.')) linkClassName = zettLinkStyle.external_github_link;\n\n  return (\n    <Link to={href} className={linkClassName} target={linkTarget}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ZettLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"external_wikipedia_link\":\"zettlink-module--external_wikipedia_link--1yc2q\",\"external_wikidata_link\":\"zettlink-module--external_wikidata_link--2uWjb\",\"external_github_link\":\"zettlink-module--external_github_link--GqlLx\",\"external_link\":\"zettlink-module--external_link--10ACe\",\"broken_link\":\"zettlink-module--broken_link--1-vTv\",\"internal_link\":\"zettlink-module--internal_link--39_OW\"};","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { useLocation } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { SeoQuery } from '../../graphql';\nconst SEO = ({\n  title,\n  description,\n  image,\n  article\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  article: boolean;\n}) => {\n  const { pathname } = useLocation();\n\n  const { siteMetadata } = (useStaticQuery(query) as SeoQuery).site;\n  const { defaultTitle, defaultDescription, siteUrl, defaultImage } = siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`\n  };\n\n  return (\n    <Helmet title={seo.title}>\n      <meta name='description' content={seo.description} />\n      {seo.image && <meta name='image' content={seo.image} />}\n      {seo.url && <meta property='og:url' content={seo.url} />}\n      {(article ? true : null) && <meta property='og:type' content='article' />}\n      {seo.title && <meta property='og:title' content={seo.title} />}\n      {seo.description && <meta property='og:description' content={seo.description} />}\n      {seo.image && <meta property='og:image' content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport moment from 'moment';\nimport React from 'react';\nimport ZettLink from '../../shared_components/ZettLink';\nimport './style.scss';\n\nconst PostTemplateDetails = ({ data }) => {\n  const { subtitle, author } = data.site.siteMetadata;\n  const post = data.mdx;\n  const tags = post.fields.tagSlugs;\n\n  const homeBlock = (\n    <div>\n      <Link className='post-single__home-button' to='/'>\n        All Notes\n      </Link>\n    </div>\n  );\n\n  const tagsBlock = (\n    <div className='post-single__tags'>\n      <ul className='post-single__tags-list'>\n        {tags &&\n          tags.map((tag, i) => (\n            <li className='post-single__tags-list-item' key={tag}>\n              <Link to={tag} className='post-single__tags-list-item-link'>\n                {post.frontmatter.tags[i]}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n\n  // const commentsBlock = (\n  //   <div>\n  //     <Disqus postNode={post} siteMetadata={data.site.siteMetadata} />\n  //   </div>\n  // );\n\n  return (\n    <div>\n      {homeBlock}\n      <div className='post-single'>\n        <div className='post-single__inner'>\n          <h1 className='post-single__title'>{post.frontmatter.title}</h1>\n          <div className='post-single__date'>\n            <em>Published {moment(post.frontmatter.date).format('D MMM YYYY')}</em>\n          </div>\n          {tagsBlock}\n\n          <MDXProvider\n            components={{\n              a: props => <ZettLink {...props} />\n            }}\n          >\n            <MDXRenderer className='post-single__body'>{post.body}</MDXRenderer>\n          </MDXProvider>\n        </div>\n        <div className='post-single__footer'>\n          <hr />\n          <p className='post-single__footer-text'>\n            {subtitle}\n            <br />\n            {author.twitter ? (\n              <a\n                href={`https://twitter.com/${author.twitter}`}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <strong>{author.name}</strong> on Twitter\n              </a>\n            ) : (\n              <strong>{author.name}</strong>\n            )}\n          </p>\n          {/* {commentsBlock} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostTemplateDetails;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout_components/Layout';\nimport PostTemplateDetails from '../components/layout_components/PostTemplateDetails';\nimport SEO from '../components/shared_components/SEO';\nimport { PostBySlugQuery } from '../graphql';\nimport { Helmet } from 'react-helmet';\n\nconst PostTemplate = ({ data }: { data: PostBySlugQuery }) => {\n  const { title, subtitle } = data.site.siteMetadata;\n  const post = data.mdx;\n  const { title: postTitle, description: postDescription } = post.frontmatter;\n  const description = postDescription !== null ? postDescription : subtitle;\n\n  return (\n    <Layout>\n      <div>\n        <Helmet>\n          <title>{`${postTitle} - ${title}`}</title>\n          <meta name='description' content={description} />\n        </Helmet>\n        <SEO article={true} title={postTitle} description={description} />\n        <PostTemplateDetails data={data} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n        disqusShortname\n        url\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}